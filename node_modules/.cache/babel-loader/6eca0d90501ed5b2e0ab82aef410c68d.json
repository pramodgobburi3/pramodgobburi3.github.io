{"ast":null,"code":"import _slicedToArray from \"/Users/pramodgobburi/Desktop/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pramodgobburi/Desktop/portfolio/src/components/ProjectLinksButton.js\";\nimport React, { useState } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport classnames from \"classnames\";\n\nconst ProjectLinksButton = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropdownOpen = _useState2[0],\n        setOpen = _useState2[1];\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  const navigateToLink = link => {\n    window.open(link, '_blank');\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    style: props.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    tag: \"span\",\n    caret: true,\n    className: \"btn-simple btn-round\",\n    color: \"primary\",\n    style: {\n      paddingLef: 15,\n      paddingRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Links\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, props.links.map(link => /*#__PURE__*/React.createElement(DropdownItem, {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => navigateToLink(link.url),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, link.name))));\n};\n\nexport default ProjectLinksButton;","map":{"version":3,"sources":["/Users/pramodgobburi/Desktop/portfolio/src/components/ProjectLinksButton.js"],"names":["React","useState","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","classnames","ProjectLinksButton","props","dropdownOpen","setOpen","toggle","navigateToLink","link","window","open","style","paddingLef","paddingRight","links","map","cursor","url","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,YAAzC,EAAuDC,YAAvD,QAA2E,YAA3E;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAGA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA,oBACJP,QAAQ,CAAC,KAAD,CADJ;AAAA;AAAA,QAC7BQ,YAD6B;AAAA,QACfC,OADe;;AAGpC,QAAMC,MAAM,GAAG,MAAMD,OAAO,CAAC,CAACD,YAAF,CAA5B;;AAEA,QAAMG,cAAc,GAAIC,IAAD,IAAU;AAC/BC,IAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB,QAAlB;AACD,GAFD;;AAIA,sBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,YAAxB;AAAsC,IAAA,MAAM,EAAEE,MAA9C;AAAsD,IAAA,KAAK,EAAEH,KAAK,CAACQ,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAC,MAApB;AAA2B,IAAA,KAAK,MAAhC;AAAiC,IAAA,SAAS,EAAC,sBAA3C;AAAkE,IAAA,KAAK,EAAC,SAAxE;AAAkF,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE;AAA/B,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAgBP,IAAI,iBACnB,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAACQ,MAAAA,MAAM,EAAE;AAAT,KAArB;AAA0C,IAAA,OAAO,EAAE,MAAMT,cAAc,CAACC,IAAI,CAACS,GAAN,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoFT,IAAI,CAACU,IAAzF,CADD,CADH,CAJF,CADF;AAYD,CArBD;;AAuBA,eAAehB,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport classnames from \"classnames\";\n\n\nconst ProjectLinksButton = (props) => {\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  const navigateToLink = (link) => {\n    window.open(link, '_blank');\n  }\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggle} style={props.style}>\n      <DropdownToggle tag=\"span\" caret className=\"btn-simple btn-round\" color=\"primary\" style={{paddingLef: 15, paddingRight: 15}}>\n        Links\n      </DropdownToggle>\n      <DropdownMenu>\n        {props.links.map(link => (\n          <DropdownItem style={{cursor: 'pointer'}} onClick={() => navigateToLink(link.url)}>{link.name}</DropdownItem>\n        ))}\n      </DropdownMenu>\n    </ButtonDropdown>\n  );\n}\n\nexport default ProjectLinksButton;"]},"metadata":{},"sourceType":"module"}