{"ast":null,"code":"import _slicedToArray from \"/Users/pramodgobburi/Desktop/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pramodgobburi/Desktop/portfolio/src/views/cli.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from \"reactstrap\";\n\nconst CLI = props => {\n  var tree = ['portfolio', ['resume.txt', ['projects', ['project_1', 'project_2']]]];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        prefix = _useState2[0],\n        setPrefix = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        availableCommands = _useState4[0],\n        setAvailableCommands = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showSignature = _useState6[0],\n        setShowSignature = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        prevList = _useState8[0],\n        setPrevList = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        input = _useState10[0],\n        setInput = _useState10[1];\n\n  const _useState11 = useState(tree),\n        _useState12 = _slicedToArray(_useState11, 2),\n        currentDirectory = _useState12[0],\n        setCurrentDirectory = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        currentDepth = _useState14[0],\n        setCurrentDepth = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        number = _useState16[0],\n        setNumber = _useState16[1];\n\n  useEffect(() => {\n    document.body.classList.toggle(\"index-page\");\n    setAvailableCommands([{\n      name: 'clear',\n      action: clearTerminal\n    }, {\n      name: 'help',\n      action: renderHelp\n    }, {\n      name: 'cd',\n      action: changeDirectory\n    }, {\n      name: 'ls',\n      action: listDirectory\n    }]);\n  }, []);\n\n  const setFocus = () => {\n    document.getElementById(\"input\").focus();\n  };\n\n  const renderSignature = () => {\n    var ascii = \"\\n _______  ______    _______  __   __  _______  ______     _______  _______  _______  _______  __   __  ______    ___  \\n |       ||    _ |  |   _   ||  |_|  ||       ||      |   |       ||       ||  _    ||  _    ||  | |  ||    _ |  |   | \\n |    _  ||   | ||  |  |_|  ||       ||   _   ||  _    |  |    ___||   _   || |_|   || |_|   ||  | |  ||   | ||  |   | \\n |   |_| ||   |_||_ |       ||       ||  | |  || | |   |  |   | __ |  | |  ||       ||       ||  |_|  ||   |_||_ |   | \\n |    ___||    __  ||       ||       ||  |_|  || |_|   |  |   ||  ||  |_|  ||  _   | |  _   | |       ||    __  ||   | \\n |   |    |   |  | ||   _   || ||_|| ||       ||       |  |   |_| ||       || |_|   || |_|   ||       ||   |  | ||   | \\n |___|    |___|  |_||__| |__||_|   |_||_______||______|   |_______||_______||_______||_______||_______||___|  |_||___| \\n \";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, ascii), /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), \"Type \\\"help\\\" to see the list of all available commands\")));\n  };\n\n  const executeCommand = e => {\n    e.preventDefault();\n    var nList = prevList.slice();\n    nList.push({\n      type: 'input',\n      prefix: prefix,\n      value: input\n    });\n    var found = false;\n\n    for (var i = 0; i < availableCommands.length; i++) {\n      var cmd = availableCommands[i];\n      var firstWord = input.split(' ')[0];\n\n      if (cmd.name === firstWord) {\n        found = true;\n        return cmd.action(nList, input.split(' ')[1], currentDirectory, currentDepth);\n      }\n    }\n\n    if (!found) {\n      nList.push({\n        type: 'error',\n        value: 'command not found: ' + input\n      });\n    }\n\n    setPrevList(nList);\n    setInput('');\n  };\n\n  const listDirectory = (nList, input, cDir) => {\n    console.log('ls dir', cDir);\n\n    const _cDir = _slicedToArray(cDir, 2),\n          parent = _cDir[0],\n          children = _cDir[1];\n\n    var list = '';\n\n    if (Array.isArray(children)) {\n      children.map(child => {\n        if (Array.isArray(child)) {\n          list += child[0] + ' ';\n        } else {\n          list += child + ' ';\n        }\n      });\n    } else {\n      list += parent + ' ' + children;\n    }\n\n    nList.push({\n      type: 'output',\n      value: list\n    });\n    setPrevList(nList);\n    setInput('');\n  };\n\n  const changeDirectory = (nList, input, cDir, depth) => {\n    const _cDir2 = _slicedToArray(cDir, 2),\n          parent = _cDir2[0],\n          children = _cDir2[1];\n\n    console.log('parent', parent);\n    console.log('children', children);\n    var found = false;\n    var subDir = [];\n    children.map((child, idx) => {\n      console.log('child', child);\n\n      if (Array.isArray(child)) {\n        if (child[0] === input) {\n          found = true;\n          subDir = child[1];\n        }\n      } else {\n        if (child === input) {\n          found = true;\n          nList.push({\n            type: 'error',\n            value: input + ' is not a directory'\n          });\n        }\n      }\n    });\n\n    if (!found) {\n      nList.push({\n        type: 'error',\n        value: 'No such directory ' + input\n      });\n    } else {\n      setCurrentDirectory(subDir);\n      setCurrentDepth(depth + 1);\n      setNumber(1);\n      setPrefix(input);\n    }\n\n    setPrevList(nList);\n    setInput('');\n  };\n\n  const renderHelp = nList => {\n    nList.push({\n      type: 'output',\n      value: \"Allowed commands are 'ls', 'clear', 'help'\"\n    });\n    setPrevList(nList);\n    setInput('');\n  };\n\n  const clearTerminal = () => {\n    setPrevList([]);\n    setInput('');\n  };\n\n  const renderOutput = (cmd, idx) => {\n    if (cmd) {\n      if (cmd.type === 'error') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"pre\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"code\", {\n          style: styles.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }\n        }, cmd.value)));\n      } else if (cmd.type === 'input') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            flex: '1',\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }\n        }, cmd.prefix && /*#__PURE__*/React.createElement(\"p\", {\n          style: styles.terminalPrefix,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }\n        }, cmd.prefix), /*#__PURE__*/React.createElement(\"p\", {\n          style: styles.terminalArrow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }\n        }, '>>'), /*#__PURE__*/React.createElement(\"p\", {\n          style: styles.prevInput,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }\n        }, cmd.value));\n      } else if (cmd.type === 'output') {\n        return /*#__PURE__*/React.createElement(\"code\", {\n          style: {\n            color: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }\n        }, cmd.value);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const renderPrevList = () => {\n    if (prevList.length > 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }, prevList.map((cmd, idx) => {\n        return renderOutput(cmd, idx);\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header header-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.terminalWindow,\n    onClick: setFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, renderSignature(), renderPrevList(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flex: '1',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, prefix && /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.terminalPrefix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, prefix), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.terminalArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, '>>'), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: executeCommand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"input\",\n    autoFocus: true,\n    autoComplete: \"off\",\n    autoCorrect: false,\n    type: \"text\",\n    value: input,\n    style: styles.terminalInput,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }))), renderOutput()))));\n};\n\nconst styles = {\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    overflow: 'hidden'\n  },\n  terminalWindow: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: '100%',\n    height: '90%',\n    borderRadius: 10,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 20,\n    overflowY: 'scroll'\n  },\n  terminalPrefix: {\n    fontSize: 20,\n    color: '#39ff14',\n    marginTop: 7,\n    marginRight: 5,\n    fontFamily: 'Courier, Monaco, monospace'\n  },\n  terminalArrow: {\n    fontSize: 30,\n    color: '#39ff14',\n    paddingTop: 5,\n    marginRight: 6,\n    fontFamily: 'Courier, Monaco, monospace'\n  },\n  terminalInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    fontFamily: 'Courier, Monaco, monospace'\n  },\n  error: {\n    color: 'red',\n    fontSize: 16\n  },\n  prevInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    marginTop: 5,\n    fontFamily: 'Courier, Monaco, monospace'\n  }\n};\nexport default CLI;","map":{"version":3,"sources":["/Users/pramodgobburi/Desktop/portfolio/src/views/cli.js"],"names":["React","useEffect","useState","Container","Row","Col","Button","CLI","props","tree","prefix","setPrefix","availableCommands","setAvailableCommands","showSignature","setShowSignature","prevList","setPrevList","input","setInput","currentDirectory","setCurrentDirectory","currentDepth","setCurrentDepth","number","setNumber","document","body","classList","toggle","name","action","clearTerminal","renderHelp","changeDirectory","listDirectory","setFocus","getElementById","focus","renderSignature","ascii","textAlign","executeCommand","e","preventDefault","nList","slice","push","type","value","found","i","length","cmd","firstWord","split","cDir","console","log","parent","children","list","Array","isArray","map","child","depth","subDir","idx","renderOutput","styles","error","display","flex","flexDirection","alignItems","terminalPrefix","terminalArrow","prevInput","color","renderPrevList","container","terminalWindow","terminalInput","target","justifyContent","overflow","backgroundColor","width","height","borderRadius","borderColor","borderWidth","padding","overflowY","fontSize","marginTop","marginRight","fontFamily","paddingTop","outline"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from \"reactstrap\";\n\n\nconst CLI = props => {\n  var tree = ['portfolio', ['resume.txt', ['projects', ['project_1', 'project_2']]]];\n  const [prefix, setPrefix] = useState('');\n  const [availableCommands, setAvailableCommands] = useState([]);\n  const [showSignature, setShowSignature] = useState(true);\n  const [prevList, setPrevList] = useState([]);\n  const [input, setInput] = useState('');\n  const [currentDirectory, setCurrentDirectory] = useState(tree);\n  const [currentDepth, setCurrentDepth] = useState(0);\n  const [number, setNumber] = useState(0);\n\n  useEffect(() => {\n    document.body.classList.toggle(\"index-page\");\n    setAvailableCommands([\n      {\n        name: 'clear',\n        action: clearTerminal\n      },\n      {\n        name: 'help',\n        action: renderHelp\n      },\n      {\n        name: 'cd',\n        action: changeDirectory,\n      },\n      {\n        name: 'ls',\n        action: listDirectory,\n      }\n    ]);\n  }, []);\n\n  const setFocus = () => {\n    document.getElementById(\"input\").focus();\n  }\n\n  const renderSignature = () => {\n    var ascii = `\n _______  ______    _______  __   __  _______  ______     _______  _______  _______  _______  __   __  ______    ___  \n |       ||    _ |  |   _   ||  |_|  ||       ||      |   |       ||       ||  _    ||  _    ||  | |  ||    _ |  |   | \n |    _  ||   | ||  |  |_|  ||       ||   _   ||  _    |  |    ___||   _   || |_|   || |_|   ||  | |  ||   | ||  |   | \n |   |_| ||   |_||_ |       ||       ||  | |  || | |   |  |   | __ |  | |  ||       ||       ||  |_|  ||   |_||_ |   | \n |    ___||    __  ||       ||       ||  |_|  || |_|   |  |   ||  ||  |_|  ||  _   | |  _   | |       ||    __  ||   | \n |   |    |   |  | ||   _   || ||_|| ||       ||       |  |   |_| ||       || |_|   || |_|   ||       ||   |  | ||   | \n |___|    |___|  |_||__| |__||_|   |_||_______||______|   |_______||_______||_______||_______||_______||___|  |_||___| \n `;\n    return (\n      <div>\n        <pre style={{textAlign: 'center'}}>\n          <code>\n            {ascii}\n          </code>\n          <code>\n            <br/>Type \"help\" to see the list of all available commands\n          </code>\n        </pre>\n      </div>\n    );\n  }\n  \n  const executeCommand = (e) => {\n    e.preventDefault();\n    var nList = prevList.slice();\n    nList.push({\n      type: 'input',\n      prefix: prefix,\n      value: input\n    });\n    var found = false;\n    for (var i=0; i < availableCommands.length; i++) {\n      var cmd = availableCommands[i];\n      var firstWord = input.split(' ')[0];\n      if (cmd.name === firstWord) {\n        found = true;\n        return cmd.action(nList, input.split(' ')[1], currentDirectory, currentDepth);\n      }\n    }\n    if(!found) {\n      nList.push({\n        type: 'error',\n        value: 'command not found: ' + input\n      });\n    }\n    setPrevList(nList);\n    setInput('');\n  }\n\n  const listDirectory = (nList, input, cDir) => {\n    console.log('ls dir', cDir);\n    const [parent, children] = cDir;\n    var list = '';\n    if(Array.isArray(children)) {\n      children.map(child => {\n        if(Array.isArray(child)) {\n          list += child[0] + ' ';\n        } else {\n          list += child + ' ';\n        }\n      });\n    } else {\n      list += parent + ' ' + children;\n    }\n    nList.push({\n      type: 'output',\n      value: list\n    });\n    setPrevList(nList);\n    setInput('');\n  }\n\n  const changeDirectory = (nList, input, cDir, depth) => {\n    const [parent, children] = cDir;\n    console.log('parent', parent);\n    console.log('children', children);\n    var found = false;\n    var subDir = [];\n    children.map((child, idx) => {\n      console.log('child', child);\n      if(Array.isArray(child)) {\n        if (child[0] === input) {\n          found = true;\n          subDir = child[1];\n        }\n      } else {\n        if (child === input) {\n          found = true;\n          nList.push({\n            type: 'error',\n            value: input + ' is not a directory'\n          })\n        }\n      }\n    });\n    if(!found) {\n      nList.push({\n        type: 'error',\n        value: 'No such directory ' + input\n      });\n    } else {\n      setCurrentDirectory(subDir);\n      setCurrentDepth(depth+1);\n      setNumber(1);\n      setPrefix(input);\n    }\n    setPrevList(nList);\n    setInput('');\n  }\n\n  const renderHelp = (nList) => {\n    nList.push({\n      type: 'output',\n      value: \"Allowed commands are 'ls', 'clear', 'help'\"\n    }); \n    setPrevList(nList);\n    setInput('');\n  }\n  const clearTerminal = () => {\n    setPrevList([]);\n    setInput('');\n  }\n\n  const renderOutput = (cmd, idx) => {\n    if (cmd) {\n      if (cmd.type === 'error') {\n        return (\n          <div key={idx}>\n            <pre>\n              <code style={styles.error}>\n                {cmd.value}\n              </code>\n            </pre>\n          </div>\n        )\n      } else if (cmd.type === 'input') {\n        return (\n          <div style={{display: 'flex', flex: '1', flexDirection: 'row',alignItems: 'center'}} key={idx}>\n            {cmd.prefix && (\n              <p style={styles.terminalPrefix}>{cmd.prefix}</p>\n            )}\n            <p style={styles.terminalArrow}>{'>>'}</p>\n            <p style={styles.prevInput}>{cmd.value}</p>\n          </div>\n        )\n      } else if (cmd.type === 'output') {\n        return (\n          <code style={{color: 'white'}}>\n            {cmd.value}\n          </code>\n        )\n      }\n    } else {\n      return null;\n    }\n  }\n\n  const renderPrevList = () => {\n    if(prevList.length > 0) {\n      return (\n        <div>\n          {prevList.map((cmd, idx) => {\n            return renderOutput(cmd, idx);\n          })}\n        </div>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"page-header header-filter\">\n        <div className=\"squares square1\" />\n        <div className=\"squares square2\" />\n        <div className=\"squares square3\" />\n        <div className=\"squares square4\" />\n        <div className=\"squares square5\" />\n        <div className=\"squares square6\" />\n        <div className=\"squares square7\" />\n        <Container style={styles.container}>          \n          <div style={styles.terminalWindow} onClick={setFocus}>\n            {renderSignature()}\n            {renderPrevList()}\n            <div style={{display: 'flex', flex: '1', flexDirection: 'row',alignItems: 'center'}}>\n              {prefix && (\n                <p style={styles.terminalPrefix}>{prefix}</p>\n              )}\n              <p style={styles.terminalArrow}>{'>>'}</p>\n              <form onSubmit={executeCommand}>\n                <input id=\"input\" autoFocus={true} autoComplete=\"off\" autoCorrect={false} type=\"text\" value={input} style={styles.terminalInput} onChange={e => setInput(e.target.value) }/>\n              </form>\n            </div>\n            {renderOutput()}\n          </div>\n        </Container>\n      </div>\n    </div>\n  )\n};\n\nconst styles = {\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    overflow: 'hidden',\n  },\n  terminalWindow: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: '100%', \n    height: '90%', \n    borderRadius: 10, \n    borderColor: 'white', \n    borderWidth: 1,\n    padding: 20,\n    overflowY: 'scroll'\n  },\n  terminalPrefix: {\n    fontSize: 20,\n    color: '#39ff14',\n    marginTop: 7,\n    marginRight: 5,\n    fontFamily: 'Courier, Monaco, monospace',\n  },\n  terminalArrow: {\n    fontSize: 30,\n    color: '#39ff14',\n    paddingTop: 5,\n    marginRight: 6,\n    fontFamily: 'Courier, Monaco, monospace',\n  },\n  terminalInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    fontFamily: 'Courier, Monaco, monospace',\n  },\n  error: {\n    color: 'red',\n    fontSize: 16\n  },\n  prevInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    marginTop: 5,\n    fontFamily: 'Courier, Monaco, monospace',\n  }\n}\n\nexport default CLI;"]},"metadata":{},"sourceType":"module"}