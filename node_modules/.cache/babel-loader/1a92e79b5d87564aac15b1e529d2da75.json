{"ast":null,"code":"import _slicedToArray from \"/Users/pramodgobburi/Desktop/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pramodgobburi/Desktop/portfolio/src/views/cli.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from \"reactstrap\";\n\nconst CLI = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        prefix = _useState2[0],\n        setPrefix = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        availableCommands = _useState4[0],\n        setAvailableCommands = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showSignature = _useState6[0],\n        setShowSignature = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        prevList = _useState8[0],\n        setPrevList = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        input = _useState10[0],\n        setInput = _useState10[1];\n\n  const tree = ['portfolio', ['resume.txt', ['projects', ['project_1', ['project_2']]]]];\n\n  const _useState11 = useState(tree),\n        _useState12 = _slicedToArray(_useState11, 2),\n        currentDirectory = _useState12[0],\n        setCurrentDirectory = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        currentDepth = _useState14[0],\n        setCurrentDepth = _useState14[1];\n\n  useEffect(() => {\n    document.body.classList.toggle(\"index-page\");\n    setAvailableCommands([{\n      name: 'clear',\n      action: clearTerminal\n    }, {\n      name: 'help',\n      action: renderHelp\n    }, {\n      name: 'cd',\n      action: changeDirectory\n    }, {\n      name: 'ls',\n      action: listDirectory\n    }]);\n  }, []);\n\n  const setFocus = () => {\n    document.getElementById(\"input\").focus();\n  };\n\n  const renderSignature = () => {\n    var ascii = \"\\n _______  ______    _______  __   __  _______  ______     _______  _______  _______  _______  __   __  ______    ___  \\n |       ||    _ |  |   _   ||  |_|  ||       ||      |   |       ||       ||  _    ||  _    ||  | |  ||    _ |  |   | \\n |    _  ||   | ||  |  |_|  ||       ||   _   ||  _    |  |    ___||   _   || |_|   || |_|   ||  | |  ||   | ||  |   | \\n |   |_| ||   |_||_ |       ||       ||  | |  || | |   |  |   | __ |  | |  ||       ||       ||  |_|  ||   |_||_ |   | \\n |    ___||    __  ||       ||       ||  |_|  || |_|   |  |   ||  ||  |_|  ||  _   | |  _   | |       ||    __  ||   | \\n |   |    |   |  | ||   _   || ||_|| ||       ||       |  |   |_| ||       || |_|   || |_|   ||       ||   |  | ||   | \\n |___|    |___|  |_||__| |__||_|   |_||_______||______|   |_______||_______||_______||_______||_______||___|  |_||___| \\n \";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, ascii), /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), \"Type \\\"help\\\" to see the list of all available commands\")));\n  };\n\n  const executeCommand = e => {\n    e.preventDefault();\n    var nList = prevList.slice();\n    nList.push({\n      type: 'input',\n      value: input\n    });\n    var found = false;\n\n    for (var i = 0; i < availableCommands.length; i++) {\n      var cmd = availableCommands[i];\n\n      if (cmd.name === input) {\n        found = true;\n        return cmd.action(nList);\n      }\n    }\n\n    if (!found) {\n      nList.push({\n        type: 'error',\n        value: 'command not found: ' + input\n      });\n    }\n\n    setPrevList(nList);\n    setInput('');\n  };\n\n  const listDirectory = nList => {\n    const _currentDirectory = _slicedToArray(currentDirectory, 2),\n          index = _currentDirectory[0],\n          children = _currentDirectory[1];\n\n    console.log('index', index);\n    console.log('children', children);\n    nList.push({\n      type: 'output',\n      value: ''\n    });\n  };\n\n  const changeDirectory = nList => {};\n\n  const renderHelp = nList => {\n    nList.push({\n      type: 'output',\n      value: \"Allowed commands are 'ls', 'clear', 'help'\"\n    });\n    setPrevList(nList);\n    setInput('');\n  };\n\n  const clearTerminal = () => {\n    setPrevList([]);\n    setInput('');\n  };\n\n  const renderOutput = (cmd, idx) => {\n    if (cmd) {\n      if (cmd.type === 'error') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"pre\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"code\", {\n          style: styles.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }\n        }, cmd.value)));\n      } else if (cmd.type === 'input') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            flex: '1',\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: styles.terminalArrow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }, '>>'), /*#__PURE__*/React.createElement(\"p\", {\n          style: styles.prevInput,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }\n        }, cmd.value));\n      } else if (cmd.type === 'output') {\n        return /*#__PURE__*/React.createElement(\"code\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }\n        }, cmd.value);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const renderPrevList = () => {\n    if (prevList.length > 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, prevList.map((cmd, idx) => {\n        return renderOutput(cmd, idx);\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header header-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.terminalWindow,\n    onClick: setFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, renderSignature(), renderPrevList(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flex: '1',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, prefix && /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.terminalPrefix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, prefix), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.terminalArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, '>>'), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: executeCommand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"input\",\n    autoFocus: true,\n    autoComplete: \"off\",\n    autoCorrect: false,\n    type: \"text\",\n    value: input,\n    style: styles.terminalInput,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }))), renderOutput()))));\n};\n\nconst styles = {\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    overflow: 'hidden'\n  },\n  terminalWindow: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: '100%',\n    height: '90%',\n    borderRadius: 10,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 20,\n    overflowY: 'scroll'\n  },\n  terminalPrefix: {\n    fontSize: 20,\n    color: '#39ff14',\n    marginTop: 7,\n    marginRight: 5,\n    fontFamily: 'Courier, Monaco, monospace'\n  },\n  terminalArrow: {\n    fontSize: 30,\n    color: '#39ff14',\n    paddingTop: 5,\n    marginRight: 6,\n    fontFamily: 'Courier, Monaco, monospace'\n  },\n  terminalInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    fontFamily: 'Courier, Monaco, monospace'\n  },\n  error: {\n    color: 'red',\n    fontSize: 16\n  },\n  prevInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    marginTop: 5,\n    fontFamily: 'Courier, Monaco, monospace'\n  }\n};\nexport default CLI;","map":{"version":3,"sources":["/Users/pramodgobburi/Desktop/portfolio/src/views/cli.js"],"names":["React","useEffect","useState","Container","Row","Col","Button","CLI","props","prefix","setPrefix","availableCommands","setAvailableCommands","showSignature","setShowSignature","prevList","setPrevList","input","setInput","tree","currentDirectory","setCurrentDirectory","currentDepth","setCurrentDepth","document","body","classList","toggle","name","action","clearTerminal","renderHelp","changeDirectory","listDirectory","setFocus","getElementById","focus","renderSignature","ascii","textAlign","executeCommand","e","preventDefault","nList","slice","push","type","value","found","i","length","cmd","index","children","console","log","renderOutput","idx","styles","error","display","flex","flexDirection","alignItems","terminalArrow","prevInput","renderPrevList","map","container","terminalWindow","terminalPrefix","terminalInput","target","justifyContent","overflow","backgroundColor","width","height","borderRadius","borderColor","borderWidth","padding","overflowY","fontSize","color","marginTop","marginRight","fontFamily","paddingTop","outline"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from \"reactstrap\";\n\n\nconst CLI = props => {\n  const [prefix, setPrefix] = useState('');\n  const [availableCommands, setAvailableCommands] = useState([]);\n  const [showSignature, setShowSignature] = useState(true);\n  const [prevList, setPrevList] = useState([]);\n  const [input, setInput] = useState('');\n  const tree = ['portfolio', ['resume.txt', ['projects', ['project_1', ['project_2']]]]];\n  const [currentDirectory, setCurrentDirectory] = useState(tree);\n  const [currentDepth, setCurrentDepth] = useState(0);\n\n  useEffect(() => {\n    document.body.classList.toggle(\"index-page\");\n    setAvailableCommands([\n      {\n        name: 'clear',\n        action: clearTerminal\n      },\n      {\n        name: 'help',\n        action: renderHelp\n      },\n      {\n        name: 'cd',\n        action: changeDirectory,\n      },\n      {\n        name: 'ls',\n        action: listDirectory,\n      }\n    ]);\n  }, []);\n\n  const setFocus = () => {\n    document.getElementById(\"input\").focus();\n  }\n\n  const renderSignature = () => {\n    var ascii = `\n _______  ______    _______  __   __  _______  ______     _______  _______  _______  _______  __   __  ______    ___  \n |       ||    _ |  |   _   ||  |_|  ||       ||      |   |       ||       ||  _    ||  _    ||  | |  ||    _ |  |   | \n |    _  ||   | ||  |  |_|  ||       ||   _   ||  _    |  |    ___||   _   || |_|   || |_|   ||  | |  ||   | ||  |   | \n |   |_| ||   |_||_ |       ||       ||  | |  || | |   |  |   | __ |  | |  ||       ||       ||  |_|  ||   |_||_ |   | \n |    ___||    __  ||       ||       ||  |_|  || |_|   |  |   ||  ||  |_|  ||  _   | |  _   | |       ||    __  ||   | \n |   |    |   |  | ||   _   || ||_|| ||       ||       |  |   |_| ||       || |_|   || |_|   ||       ||   |  | ||   | \n |___|    |___|  |_||__| |__||_|   |_||_______||______|   |_______||_______||_______||_______||_______||___|  |_||___| \n `;\n    return (\n      <div>\n        <pre style={{textAlign: 'center'}}>\n          <code>\n            {ascii}\n          </code>\n          <code>\n            <br/>Type \"help\" to see the list of all available commands\n          </code>\n        </pre>\n      </div>\n    );\n  }\n  \n  const executeCommand = (e) => {\n    e.preventDefault();\n    var nList = prevList.slice();\n    nList.push({\n      type: 'input',\n      value: input\n    });\n    var found = false;\n    for (var i=0; i < availableCommands.length; i++) {\n      var cmd = availableCommands[i];\n      if (cmd.name === input) {\n        found = true;\n        return cmd.action(nList);\n      }\n    }\n    if(!found) {\n      nList.push({\n        type: 'error',\n        value: 'command not found: ' + input\n      });\n    }\n    setPrevList(nList);\n    setInput('');\n  }\n\n  const listDirectory = nList => {\n    const [index, children] = currentDirectory;\n    console.log('index', index);\n    console.log('children', children);\n    nList.push({\n      type: 'output',\n      value: ''\n    })\n  }\n\n  const changeDirectory = nList => {\n\n  }\n\n  const renderHelp = (nList) => {\n    nList.push({\n      type: 'output',\n      value: \"Allowed commands are 'ls', 'clear', 'help'\"\n    }); \n    setPrevList(nList);\n    setInput('');\n  }\n  const clearTerminal = () => {\n    setPrevList([]);\n    setInput('');\n  }\n\n  const renderOutput = (cmd, idx) => {\n    if (cmd) {\n      if (cmd.type === 'error') {\n        return (\n          <div key={idx}>\n            <pre>\n              <code style={styles.error}>\n                {cmd.value}\n              </code>\n            </pre>\n          </div>\n        )\n      } else if (cmd.type === 'input') {\n        return (\n          <div style={{display: 'flex', flex: '1', flexDirection: 'row',alignItems: 'center'}} key={idx}>\n            <p style={styles.terminalArrow}>{'>>'}</p>\n            <p style={styles.prevInput}>{cmd.value}</p>\n          </div>\n        )\n      } else if (cmd.type === 'output') {\n        return (\n          <code>\n            {cmd.value}\n          </code>\n        )\n      }\n    } else {\n      return null;\n    }\n  }\n\n  const renderPrevList = () => {\n    if(prevList.length > 0) {\n      return (\n        <div>\n          {prevList.map((cmd, idx) => {\n            return renderOutput(cmd, idx);\n          })}\n        </div>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"page-header header-filter\">\n        <div className=\"squares square1\" />\n        <div className=\"squares square2\" />\n        <div className=\"squares square3\" />\n        <div className=\"squares square4\" />\n        <div className=\"squares square5\" />\n        <div className=\"squares square6\" />\n        <div className=\"squares square7\" />\n        <Container style={styles.container}>          \n          <div style={styles.terminalWindow} onClick={setFocus}>\n            {renderSignature()}\n            {renderPrevList()}\n            <div style={{display: 'flex', flex: '1', flexDirection: 'row',alignItems: 'center'}}>\n              {prefix && (\n                <p style={styles.terminalPrefix}>{prefix}</p>\n              )}\n              <p style={styles.terminalArrow}>{'>>'}</p>\n              <form onSubmit={executeCommand}>\n                <input id=\"input\" autoFocus={true} autoComplete=\"off\" autoCorrect={false} type=\"text\" value={input} style={styles.terminalInput} onChange={e => setInput(e.target.value) }/>\n              </form>\n            </div>\n            {renderOutput()}\n          </div>\n        </Container>\n      </div>\n    </div>\n  )\n};\n\nconst styles = {\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    overflow: 'hidden',\n  },\n  terminalWindow: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: '100%', \n    height: '90%', \n    borderRadius: 10, \n    borderColor: 'white', \n    borderWidth: 1,\n    padding: 20,\n    overflowY: 'scroll'\n  },\n  terminalPrefix: {\n    fontSize: 20,\n    color: '#39ff14',\n    marginTop: 7,\n    marginRight: 5,\n    fontFamily: 'Courier, Monaco, monospace',\n  },\n  terminalArrow: {\n    fontSize: 30,\n    color: '#39ff14',\n    paddingTop: 5,\n    marginRight: 6,\n    fontFamily: 'Courier, Monaco, monospace',\n  },\n  terminalInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    fontFamily: 'Courier, Monaco, monospace',\n  },\n  error: {\n    color: 'red',\n    fontSize: 16\n  },\n  prevInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    marginTop: 5,\n    fontFamily: 'Courier, Monaco, monospace',\n  }\n}\n\nexport default CLI;"]},"metadata":{},"sourceType":"module"}