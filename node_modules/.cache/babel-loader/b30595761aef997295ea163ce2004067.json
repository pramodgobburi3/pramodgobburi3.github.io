{"ast":null,"code":"import _slicedToArray from \"/Users/pramodgobburi/Desktop/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pramodgobburi/Desktop/portfolio/src/views/cli.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport CursorImitator from '../components/CursorImitator';\n\nconst CLI = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        availableCommands = _useState2[0],\n        setAvailableCommands = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showSignature = _useState4[0],\n        setShowSignature = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        prevList = _useState6[0],\n        setPrevList = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        input = _useState8[0],\n        setInput = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        error = _useState10[0],\n        setError = _useState10[1];\n\n  useEffect(() => {\n    document.body.classList.toggle(\"index-page\");\n    setAvailableCommands(['help', 'ls', 'open']);\n  }, []);\n\n  const setFocus = () => {\n    document.getElementById(\"input\").focus();\n  };\n\n  const renderSignature = () => {\n    var ascii = \"\\n _______  ______    _______  __   __  _______  ______     _______  _______  _______  _______  __   __  ______    ___  \\n |       ||    _ |  |   _   ||  |_|  ||       ||      |   |       ||       ||  _    ||  _    ||  | |  ||    _ |  |   | \\n |    _  ||   | ||  |  |_|  ||       ||   _   ||  _    |  |    ___||   _   || |_|   || |_|   ||  | |  ||   | ||  |   | \\n |   |_| ||   |_||_ |       ||       ||  | |  || | |   |  |   | __ |  | |  ||       ||       ||  |_|  ||   |_||_ |   | \\n |    ___||    __  ||       ||       ||  |_|  || |_|   |  |   ||  ||  |_|  ||  _   | |  _   | |       ||    __  ||   | \\n |   |    |   |  | ||   _   || ||_|| ||       ||       |  |   |_| ||       || |_|   || |_|   ||       ||   |  | ||   | \\n |___|    |___|  |_||__| |__||_|   |_||_______||______|   |_______||_______||_______||_______||_______||___|  |_||___| \\n \";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, ascii), /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), \"Type \\\"help\\\" to see the list of all available commands\")));\n  };\n\n  const renderError = () => {};\n\n  const executeCommand = e => {\n    e.preventDefault();\n    var nList = prevList.slice();\n    nList.push({\n      type: 'input',\n      value: input\n    });\n\n    if (availableCommands.includes(input)) {} else {\n      nList.push({\n        type: 'error',\n        value: 'command not found: ' + input\n      });\n    }\n\n    setPrevList(nList);\n  };\n\n  const renderOutput = cmd => {\n    if (cmd.type === 'error') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"pre\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"code\", {\n        style: styles.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, error)));\n    } else if (cmd.type === 'input') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flex: '1',\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: styles.terminalArrow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, '>>'), /*#__PURE__*/React.createElement(\"p\", {\n        style: styles.terminalInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, cmd.value));\n    }\n  };\n\n  const renderPrevList = () => {\n    if (prevList.length > 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, prevList.map((cmd, idx) => {\n        return renderOutput(cmd);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header header-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"squares square7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.terminalWindow,\n    onClick: setFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, renderSignature(), renderPrevList(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flex: '1',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.terminalArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, '>>'), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: executeCommand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"input\",\n    autoFocus: true,\n    autoComplete: \"off\",\n    autoCorrect: false,\n    type: \"text\",\n    value: input,\n    style: styles.terminalInput,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }))), renderOutput()))));\n};\n\nconst styles = {\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex'\n  },\n  terminalWindow: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: '100%',\n    height: '90%',\n    borderRadius: 10,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 20\n  },\n  terminalArrow: {\n    fontSize: 30,\n    color: '#39ff14',\n    paddingTop: 5,\n    marginRight: 6\n  },\n  terminalInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    fontFamily: 'Courier, Monaco, monospace'\n  },\n  error: {\n    color: 'red',\n    fontSize: 16\n  }\n};\nexport default CLI;","map":{"version":3,"sources":["/Users/pramodgobburi/Desktop/portfolio/src/views/cli.js"],"names":["React","useEffect","useState","Container","Row","Col","Button","CursorImitator","CLI","props","availableCommands","setAvailableCommands","showSignature","setShowSignature","prevList","setPrevList","input","setInput","error","setError","document","body","classList","toggle","setFocus","getElementById","focus","renderSignature","ascii","textAlign","renderError","executeCommand","e","preventDefault","nList","slice","push","type","value","includes","renderOutput","cmd","styles","display","flex","flexDirection","alignItems","terminalArrow","terminalInput","renderPrevList","length","map","idx","container","terminalWindow","target","justifyContent","backgroundColor","width","height","borderRadius","borderColor","borderWidth","padding","fontSize","color","paddingTop","marginRight","outline","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from \"reactstrap\";\n\nimport CursorImitator from '../components/CursorImitator';\n\nconst CLI = props => {\n  const [availableCommands, setAvailableCommands] = useState([]);\n  const [showSignature, setShowSignature] = useState(true);\n  const [prevList, setPrevList] = useState([]);\n  const [input, setInput] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    document.body.classList.toggle(\"index-page\");\n    setAvailableCommands([\n      'help',\n      'ls',\n      'open',\n    ]);\n  }, []);\n\n  const setFocus = () => {\n    document.getElementById(\"input\").focus();\n  }\n\n  const renderSignature = () => {\n    var ascii = `\n _______  ______    _______  __   __  _______  ______     _______  _______  _______  _______  __   __  ______    ___  \n |       ||    _ |  |   _   ||  |_|  ||       ||      |   |       ||       ||  _    ||  _    ||  | |  ||    _ |  |   | \n |    _  ||   | ||  |  |_|  ||       ||   _   ||  _    |  |    ___||   _   || |_|   || |_|   ||  | |  ||   | ||  |   | \n |   |_| ||   |_||_ |       ||       ||  | |  || | |   |  |   | __ |  | |  ||       ||       ||  |_|  ||   |_||_ |   | \n |    ___||    __  ||       ||       ||  |_|  || |_|   |  |   ||  ||  |_|  ||  _   | |  _   | |       ||    __  ||   | \n |   |    |   |  | ||   _   || ||_|| ||       ||       |  |   |_| ||       || |_|   || |_|   ||       ||   |  | ||   | \n |___|    |___|  |_||__| |__||_|   |_||_______||______|   |_______||_______||_______||_______||_______||___|  |_||___| \n `;\n    return (\n      <div>\n        <pre style={{textAlign: 'center'}}>\n          <code>\n            {ascii}\n          </code>\n          <code>\n            <br/>Type \"help\" to see the list of all available commands\n          </code>\n        </pre>\n      </div>\n    );\n  }\n\n  const renderError = () => {\n\n  }\n  \n  const executeCommand = (e) => {\n    e.preventDefault();\n    var nList = prevList.slice();\n    nList.push({\n      type: 'input',\n      value: input\n    });\n    if(availableCommands.includes(input)) {\n\n    } else {\n      nList.push({\n        type: 'error',\n        value: 'command not found: ' + input\n      });\n    }\n    setPrevList(nList);\n  }\n\n  const renderOutput = (cmd) => {\n    if (cmd.type === 'error') {\n      return (\n        <div>\n          <pre>\n            <code style={styles.error}>\n              {error}\n            </code>\n          </pre>\n        </div>\n      )\n    } else if (cmd.type === 'input') {\n      return (\n        <div style={{display: 'flex', flex: '1', flexDirection: 'row',alignItems: 'center'}}>\n          <p style={styles.terminalArrow}>{'>>'}</p>\n          <p style={styles.terminalInput}>{cmd.value}</p>\n        </div>\n      )\n    }\n  }\n\n  const renderPrevList = () => {\n    if(prevList.length > 0) {\n      return (\n        <div>\n          {prevList.map((cmd, idx) => {\n            return renderOutput(cmd);\n          })}\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"page-header header-filter\">\n        <div className=\"squares square1\" />\n        <div className=\"squares square2\" />\n        <div className=\"squares square3\" />\n        <div className=\"squares square4\" />\n        <div className=\"squares square5\" />\n        <div className=\"squares square6\" />\n        <div className=\"squares square7\" />\n        <Container style={styles.container}>          \n          <div style={styles.terminalWindow} onClick={setFocus}>\n            {renderSignature()}\n            {renderPrevList()}\n            <div style={{display: 'flex', flex: '1', flexDirection: 'row',alignItems: 'center'}}>\n              <p style={styles.terminalArrow}>{'>>'}</p>\n              <form onSubmit={executeCommand}>\n                <input id=\"input\" autoFocus={true} autoComplete=\"off\" autoCorrect={false} type=\"text\" value={input} style={styles.terminalInput} onChange={e => setInput(e.target.value) }/>\n              </form>\n            </div>\n            {renderOutput()}\n          </div>\n        </Container>\n      </div>\n    </div>\n  )\n};\n\nconst styles = {\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex'\n  },\n  terminalWindow: {\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    width: '100%', \n    height: '90%', \n    borderRadius: 10, \n    borderColor: 'white', \n    borderWidth: 1,\n    padding: 20,\n  },\n  terminalArrow: {\n    fontSize: 30,\n    color: '#39ff14',\n    paddingTop: 5,\n    marginRight: 6,\n  },\n  terminalInput: {\n    color: 'white',\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    outline: 'none',\n    fontSize: 18,\n    fontFamily: 'Courier, Monaco, monospace',\n  },\n  error: {\n    color: 'red',\n    fontSize: 16\n  }\n}\n\nexport default CLI;"]},"metadata":{},"sourceType":"module"}